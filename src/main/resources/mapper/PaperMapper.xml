<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.scientific.audit.mapper.PaperMapper">

    <resultMap id="BaseResultMap" type="com.scientific.audit.common.model.entity.Paper">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="types" column="type" jdbcType="TINYINT"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="titleEn" column="title_en" jdbcType="VARCHAR"/>
        <result property="summary" column="summary" jdbcType="VARCHAR"/>
        <result property="summaryEn" column="summary_en" jdbcType="VARCHAR"/>
        <result property="keyword" column="keyword" jdbcType="VARCHAR"/>
        <result property="keywordEn" column="keyword_en" jdbcType="VARCHAR"/>
        <result property="state" column="state" jdbcType="TINYINT"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="uploaderId" column="uploader_id" jdbcType="BIGINT"/>
    </resultMap>

    <resultMap id="PaperUserDirectionMap" type="com.scientific.audit.common.model.vo.FindByTypesVo">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="types" column="types" jdbcType="TINYINT"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="titleEn" column="title_en" jdbcType="VARCHAR"/>
        <result property="summary" column="summary" jdbcType="VARCHAR"/>
        <result property="summaryEn" column="summary_en" jdbcType="VARCHAR"/>
        <result property="keyword" column="keyword" jdbcType="VARCHAR"/>
        <result property="keywordEn" column="keyword_en" jdbcType="VARCHAR"/>
        <result property="state" column="state" jdbcType="TINYINT"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="uploaderId" column="uploader_id" jdbcType="BIGINT"/>
        <association property="user" column="uploader_id" select="com.scientific.audit.mapper.UserMapper.selectById"/>
        <collection property="directions" select="findPaperDirections" column="id" foreignColumn="paper_id"/>
        <collection property="paperFiles" select="findPaperFiles" column="id" foreignColumn="paper_id"/>
        <collection property="paperReviewers" select="findPaperTeacher" column="id" foreignColumn="paper_id"/>
    </resultMap>

    <select id="findPaperFiles" resultMap="com.scientific.audit.mapper.PaperFileMapper.BaseResultMap">
        SELECT
        <include refid="com.scientific.audit.mapper.PaperFileMapper.Base_Column_List"/>
        FROM tb_paper_file WHERE paper_id = #{paper_id}
    </select>

    <select id="selectTeacherEmails" resultType="com.scientific.audit.common.model.vo.PaperVo">
        SELECT tb_user.email
        FROM tb_user
                 LEFT JOIN tb_paper_reviewer ON tb_user.id = tb_paper_reviewer.user_id
        WHERE paper_id = #{id} and tb_user.role = 3
    </select>


    <select id="findPaperDirections" resultMap="com.scientific.audit.mapper.DirectionMapper.BaseResultMap">
        SELECT DISTINCT td.id AS id, td.name AS name
        FROM tb_paper_direction AS tpd
                 JOIN tb_direction AS td ON tpd.direction_id = td.id
        WHERE paper_id = #{paper_id}
    </select>

    <select id="findPaperTeacher" resultMap="com.scientific.audit.mapper.UserMapper.UserInfoResultMap">
        SELECT tb_user.name AS name, tb_user.id as id
        FROM tb_paper_reviewer
                 JOIN tb_user ON tb_user.id = tb_paper_reviewer.user_id
        WHERE paper_id = #{paper_id} and tb_user.role = 3
    </select>

    <sql id="searchSql">
        <if test="search != null and search !=  ''">
            AND (tb_paper.title LIKE concat('%'
            , #{search}
            , '%')
            OR tb_paper.summary LIKE concat('%'
            , #{search}
            , '%')
            OR tb_paper.keyword LIKE concat('%'
            , #{search}
            , '%')
            OR tb_paper.title_en LIKE concat('%'
            , #{search}
            , '%')
            OR tb_paper.summary_en LIKE concat('%'
            , #{search}
            , '%')
            OR tb_paper.keyword_en LIKE concat('%'
            , #{search}
            , '%')
            )
        </if>
    </sql>
    <select id="findByTypes" resultMap="PaperUserDirectionMap">
        SELECT *
        FROM tb_paper
        WHERE types = #{types}
        <include refid="searchSql"/>
    </select>

    <select id="findByTypesFirst" resultMap="PaperUserDirectionMap">
        SELECT *
        FROM tb_paper
        WHERE types = #{types}
        AND (state = 0 OR state = 2)
        <include refid="searchSql"/>
    </select>

    <select id="findByTypesSecond" resultMap="PaperUserDirectionMap">
        SELECT *
        FROM tb_paper
        WHERE types = #{types}
        AND (state = 1 OR state = 4)
        <include refid="searchSql"/>
    </select>

    <select id="findByTypesThird" resultMap="PaperUserDirectionMap">
        SELECT *
        FROM tb_paper
        WHERE types = #{types}
        AND (state = 3 OR state = 6)
        <include refid="searchSql"/>
    </select>

    <select id="findByTypesFourth" resultMap="PaperUserDirectionMap">
        SELECT *
        FROM tb_paper
        WHERE types in (0,1,2)
        AND state = 5

        <include refid="searchSql"/>
    </select>

    <select id="findByStudent" resultMap="PaperUserDirectionMap">
        SELECT *
        FROM tb_paper
        WHERE uploader_id = #{id}
        <include refid="searchSql"/>
    </select>
    <select id="countByStateAndType" resultType="java.util.Map">
        SELECT 'first_paper' AS state, COUNT(*) AS `count`
        FROM tb_paper
        WHERE state = 0
          AND types = 0
        UNION
        SELECT 'second_paper' AS state, COUNT(*) AS `count`
        FROM tb_paper
        WHERE state = 1
          AND types = 0
        UNION
        SELECT 'third_paper' AS state, COUNT(*) AS `count`
        FROM tb_paper
        WHERE state = 3
          AND types = 0
        UNION
        SELECT 'first_patent' AS state, COUNT(*) AS `count`
        FROM tb_paper
        WHERE state = 0
          AND types = 1
        UNION
        SELECT 'second_patent' AS state, COUNT(*) AS `count`
        FROM tb_paper
        WHERE state = 1
          AND types = 1
        UNION
        SELECT 'third_patent' AS state, COUNT(*) AS `count`
        FROM tb_paper
        WHERE state = 3
          AND types = 1
        UNION
        SELECT 'first_report' AS state, COUNT(*) AS `count`
        FROM tb_paper
        WHERE state = 0
          AND types = 2
        UNION
        SELECT 'second_report' AS state, COUNT(*) AS `count`
        FROM tb_paper
        WHERE state = 1
          AND types = 2
        UNION
        SELECT 'third_report' AS state, COUNT(*) AS `count`
        FROM tb_paper
        WHERE state = 3
          AND types = 2

    </select>
    <select id="scheduledTaskStudent" resultType="com.scientific.audit.common.model.entity.Paper">
        SELECT * FROM tb_paper WHERE datediff(now(), update_time ) >= 7 and (state = 2 OR state = 4 OR state = 6)
    </select>

    <select id="scheduledTaskTeacher" resultType="com.scientific.audit.common.model.entity.Paper">
        SELECT * FROM tb_paper WHERE datediff(now(), update_time ) >= 7 and (state = 1 OR state = 3)
    </select>


</mapper>
